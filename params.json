{"name":"Localizationbuildtasks","tagline":"A tool for preparing resources for translation and integrating them back into your product.","body":"# localization-build-tasks\r\n\r\nA tool for preparing resources for translation and integrating them back into your product.\r\n\r\n## Problem\r\n\r\nIn a large code base, I've found that delivering resources to translators and integrating their work back into a product to be a pain point even though all my resources are in \r\nproperties files as they should be. You can give them your entire directory structure of resource files which may work the first time you translate your product, but I don't\r\nlike the idea of relying on a third party to find and update translations the next next go around and I don't want to pay for them to re-translate an entire product. I needed a way \r\nto:\r\n* compare the current state of resources with the state of the last translations\r\n* output what key/value pairs had been added/deleted/updated\r\n* import the updated translations into my localized resource files\r\n* integrate this into the build process\r\n\r\n## How to Use\r\n\r\n1. \tCall from a build task just like any custom java ant build task.\r\n\r\n## License\r\n\r\n[MIT license](LICENSE.md)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}